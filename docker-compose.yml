services:
  postgres:
    image: postgres:15
    container_name: 'postgres'
    restart: on-failure
    command: [ "postgres", "-c", "max_connections=100" ]
    environment:
      - POSTGRES_PASSWORD=postgres@42
    networks:
      - shared_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: masstransit/rabbitmq
    container_name: 'rabbitmq'
    restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    networks:
      - shared_network
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmqctl status" ]
      interval: 10s
      timeout: 5s
      retries: 5
  minio:
    image: minio/minio
    container_name: 'minio'
    restart: on-failure
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - shared_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 3
  seq:
    image: datalust/seq:latest
    container_name: 'seq'
    environment:
      - ACCEPT_EULA=Y
    volumes:
      - seq_data:/data
    ports:
      - "5341:5341"
      - "8081:80"
    networks:
      - shared_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5341/api/health || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 3
      
  web_api:
    image: web.api
    container_name: 'web_api'
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      minio:
        condition: service_started
      seq:
        condition: service_started
    ports:
      - "8080:80"
    networks:
      - shared_network
    build:
      context: .
      dockerfile: src/Web.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_ENVIRONMENT=Development
      - SEQ_URL=http://seq:5341

networks:
  shared_network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
  rabbitmq_log:
  minio_data:
  seq_data: